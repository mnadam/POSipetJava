/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sipet;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.HashMap;
import java.util.Locale;
import javax.swing.JFrame;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Adam
 */
public class Transaksi_POS extends javax.swing.JFrame {
    Connection con;
    Statement stat;
    ResultSet rs;
    String sql,test,sql_id,status;
    
    Timer timer;

  
    public Transaksi_POS() {
        initComponents();
        Koneksi DB = new Koneksi();
        DB.config();
        con = DB.con;
        stat = DB.stm;
        //Data Combo Box
        DataBaseToComboBoxbarang();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        id_trs();
        
        Locale locale = new Locale ("id", "ID");
        Locale.setDefault(locale);
        
        txt_id_trs.setEnabled(false);
        btn_edit.setEnabled(false);
        btn_hapus.setEnabled(false);
        Tampil_Data();
        
        
// DATE TIME REAL TIME
 ActionListener actionListener = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                //Time in 24Hrs Format
                Date date = new Date();
                DateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
                String time = timeFormat.format(date);
                txt_date_time.setText(time);
                
              
              
                
                 Date date2 = new Date();
                DateFormat timeFormat2 = new SimpleDateFormat("dd/MM/yyyy");
                String time2 = timeFormat2.format(date2);
                txt_date_time.setText(time2);
            }
        };
        timer = new Timer(1000, actionListener);
        timer.setInitialDelay(0);
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    
    public void DataBaseToComboBoxbarang(){
       
        try {
            sql = "SELECT * FROM barang";
         
            rs = stat.executeQuery(sql);
            cmbo_barang.addItem("");
            while (rs.next()) {                
                cmbo_barang.addItem(rs.getString("nama_barang"));
            }
            
            
        } catch (Exception e) {
        }
    }
    
    
    private void Tampil_Data(){
           id_trs(); 
//        String cari = txt_search.getText(); 
        // membuat tampilan model tabel
        DefaultTableModel model = new DefaultTableModel();
//        {
//           @Override
//    public boolean isCellEditable(int row, int column){
//        return false;
//    }    
//        };
//        JTableHeader Theader = new JTableHeader
        

         
       
        
        model.addColumn("BARCODE");
        model.addColumn("Nama Barang");
        model.addColumn("Harga");
        model.addColumn("Jumlah");
        model.addColumn("Total");
//        
       
        
        
        //menampilkan data database kedalam tabel
        try {
      
            
            sql = "SELECT * FROM `detail_transaksi_pos` as a "
                    + "INNER JOIN barang as b ON a.id_barang = b.id_barang where a.id_transaksi_pos ='"+txt_id_trs.getText()+"'"; 
//            "+txt_id_trs.getText()+"
            rs = stat.executeQuery(sql);
            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("id_barang"),
                    rs.getString("nama_barang"),
                    rs.getString("harga"),
                    rs.getString("jumlah"),
                    
                    rs.getString("total_harga")
                    
                   
                        
                });
            }
            
              int jumlah = model.getRowCount();
                int sumTotal =0;

                for (int i = 0; i < jumlah; i++) {
                   int dataTotal = Integer.valueOf(model.getValueAt(i, 4).toString());
                   sumTotal += dataTotal;
                }
               txt_total.setText(Integer.toString(sumTotal));
//         btn_edit.setEnabled(false);
//         btn_hapus.setEnabled(false);
        

            
       
         jTable1.setModel(model);
         
        
//            System.out.println();
        } catch (Exception e) {
            System.out.println(e.getMessage());
           
        }
    }
    
    
     public void id_trs(){
        
        String sql = "SELECT id_transaksi_pos FROM transaksi_pos";
        try {
            
            rs = stat.executeQuery(sql);
            if(rs.last()){
                txt_id_trs.setText(String.valueOf(rs.getInt(1)+1));
            }
            else
                txt_id_trs.setText("1");
        } catch (Exception e) {
        }
    }  
     
     
     
     public void detail_id_trs(){
        
        
        String sql = "SELECT id_detail_transaksi_pos FROM transaksi_pos";
        int x;
        try {
          
            rs = stat.executeQuery(sql);
            if(rs.last()){
                String d_id_trs = (String.valueOf(rs.getInt(1)+1));
                 x = Integer.parseInt(d_id_trs);
            }
            else
                 x = 1;
        } catch (Exception e) {
        }
    }  
     
      public void clear(){
          txt_id_barang.setText("");
          txt_harga.setText("");
          txt_jumlah.setText("");
          cmbo_barang.setSelectedIndex(0);
          btn_tambah.setEnabled(true);
          btn_edit.setEnabled(false);
          btn_hapus.setEnabled(false);
          txt_id_barang.setEnabled(true);
          cmbo_barang.setEnabled(true);
          txt_harga.setEnabled(true);
          txt_bayar.setText("");
          
      }
      
      public void update_barang(){
          
      }
     
      
      public void Input(){
          
           String a = txt_id_trs.getText();
//    int a_parse = Integer.parseInt(a);

                LocalDateTime myDateObj = LocalDateTime.now();
                DateTimeFormatter myFormatObj = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
                String formattedDate = myDateObj.format(myFormatObj);
//                
            try {
//                  
            String time = "2022-06-23 15:53:28";
            int parse_total = Integer.parseInt(txt_total.getText());
            int parse_bayar = Integer.parseInt(txt_bayar.getText());
            int kembali = parse_bayar - parse_total;
            
            
            if (parse_bayar < parse_total){
                
            JOptionPane.showMessageDialog(null, "Dilarang ngutang!");
            }
            
            else {
                
            
            String sql = "insert into transaksi_pos values('"
                    
                    +a+"','"
                    +parse_total+"','"
                    +parse_bayar+"','"
                    +kembali+"','"
                    +formattedDate+"')";
//                   
            stat.execute(sql);
            JOptionPane.showMessageDialog(null, "Penyimpanan Data Berhasil");
            }
        }  catch (SQLException e) {
              System.out.println("total");
              System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(this, "ERROR, ", "GAGAL",  JOptionPane.INFORMATION_MESSAGE );
        }
      }
     
     
     
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        txt_date_time = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txt_id_trs = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txt_id_barang = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmbo_barang = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txt_harga = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_jumlah = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txt_total = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_bayar = new javax.swing.JTextField();
        btn_tambah = new javax.swing.JButton();
        btn_edit = new javax.swing.JButton();
        btn_hapus = new javax.swing.JButton();
        btn_reset = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();

        jLabel7.setText("jLabel7");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txt_date_time.setText("Date time");

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel8.setText("ID TRANSAKSI");

        jLabel1.setText("ID BARANG / BARCODE");

        txt_id_barang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_id_barangActionPerformed(evt);
            }
        });
        txt_id_barang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_id_barangKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_id_barangKeyReleased(evt);
            }
        });

        jLabel2.setText("NAMA BARANG");

        cmbo_barang.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmbo_barangPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        cmbo_barang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbo_barangMouseClicked(evt);
            }
        });
        cmbo_barang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbo_barangActionPerformed(evt);
            }
        });

        jLabel3.setText("HARGA");

        txt_harga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_hargaActionPerformed(evt);
            }
        });

        jLabel4.setText("JUMLAH");

        txt_jumlah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_jumlahActionPerformed(evt);
            }
        });

        jButton5.setText("BAYAR");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("BAYAR + PRINT");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("TOTAL");

        txt_total.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txt_total.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_total.setText("0");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("BAYAR");

        txt_bayar.setText("0");
        txt_bayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_bayarActionPerformed(evt);
            }
        });
        txt_bayar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_bayarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_bayarKeyReleased(evt);
            }
        });

        btn_tambah.setBackground(new java.awt.Color(102, 255, 102));
        btn_tambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sipet/Gambar/icons-check-mark.png"))); // NOI18N
        btn_tambah.setText("TAMBAH");
        btn_tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tambahActionPerformed(evt);
            }
        });

        btn_edit.setBackground(new java.awt.Color(255, 255, 153));
        btn_edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sipet/Gambar/icons-edit.png"))); // NOI18N
        btn_edit.setText("EDIT");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });

        btn_hapus.setBackground(new java.awt.Color(255, 51, 51));
        btn_hapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sipet/Gambar/icons-trash.png"))); // NOI18N
        btn_hapus.setText("HAPUS");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });

        btn_reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sipet/Gambar/icons-reset.png"))); // NOI18N
        btn_reset.setText("RESET");
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbo_barang, javax.swing.GroupLayout.Alignment.TRAILING, 0, 197, Short.MAX_VALUE)
                                    .addComponent(txt_id_barang, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_id_trs, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_harga, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_jumlah, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_total, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                                    .addComponent(txt_bayar)))
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_tambah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_edit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_hapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_reset)
                        .addGap(295, 295, 295)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(72, 72, 72))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(txt_id_trs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(txt_id_barang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(cmbo_barang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(txt_total)
                                .addGap(31, 31, 31)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(txt_harga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(txt_bayar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_tambah)
                            .addComponent(btn_edit)
                            .addComponent(btn_hapus)
                            .addComponent(btn_reset)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 925, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel9.setText("Kasir");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txt_date_time, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_date_time)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_id_barangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_id_barangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_id_barangActionPerformed

    private void txt_hargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_hargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_hargaActionPerformed

    private void txt_jumlahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_jumlahActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_jumlahActionPerformed

    private void btn_tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tambahActionPerformed
         
           if (txt_id_barang.getText().equals("")){
          JOptionPane.showMessageDialog(null, "Data Tidak Boleh Kosong" , "Pesan", JOptionPane.ERROR_MESSAGE);
      }
        else{
            try {
                  
        
        String sql_detail = "SELECT id_detail_transaksi_pos FROM detail_transaksi_pos";
       
        int x;
      
            String id_br = txt_id_barang.getText();
//          
          
             int parse_jumlah = Integer.parseInt(txt_jumlah.getText());
             int parse_harga = Integer.parseInt(txt_harga.getText());
             int total = parse_jumlah * parse_harga;
//           
               

              rs = stat.executeQuery(sql_detail);
            if(rs.last()){
                String d_id_trs = (String.valueOf(rs.getInt(1)+1));
                 x = Integer.parseInt(d_id_trs);
            }
            else {
                 x = 1;
        } 
            
            //CHECKING STOK
            String sql_barang = "SELECT * FROM barang WHERE id_barang = '"+txt_id_barang.getText()+"'";
            rs = stat.executeQuery(sql_barang);
            rs.next();
            String id_barang =  rs.getString("id_barang");
            String stok = rs.getString("stok");

            
            int c_jml = Integer.parseInt(txt_jumlah.getText());
            int c_stok = Integer.parseInt(stok);
//            
//            
            if (c_stok < c_jml){
                  JOptionPane.showMessageDialog(null, "Pembelian tidak dapat dilakukan, Stok sisa " +stok+ " Silahkan update data!");
                          
            }
            else{
                    int stok_update = c_stok - c_jml;
                    
                    String sql_update_Stok = 
                            sql = "update barang SET "
                                + "stok='"+stok_update+"'"
                                +"where id_barang='"+txt_id_barang.getText()+"'";
                            
                    String sql = "insert into detail_transaksi_pos values('"
                            +x+"','"
                            +txt_id_trs.getText()+"','"
                            +txt_id_barang.getText()+"','"
                            +txt_jumlah.getText()+"','"
                            +total+"')";

                    stat.execute(sql);
                    stat.execute(sql_update_Stok);
                    
                    
                    JOptionPane.showMessageDialog(null, "Penyimpanan Data Berhasil");
                    JOptionPane.showMessageDialog(null, "Stok barang Update!");
           
            }
        }  catch (SQLException e) {
              System.out.println(e.getMessage());
//            JOptionPane.showMessageDialog(this, "ERROR, ", "GAGAL",  JOptionPane.INFORMATION_MESSAGE );
        }
        
        Tampil_Data();
        clear();
        
    }                     
        
    }//GEN-LAST:event_btn_tambahActionPerformed

    private void txt_bayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_bayarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_bayarActionPerformed

    private void cmbo_barangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbo_barangActionPerformed
     
      
        
    }//GEN-LAST:event_cmbo_barangActionPerformed

    private void cmbo_barangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbo_barangMouseClicked
       
   
    }//GEN-LAST:event_cmbo_barangMouseClicked

    private void cmbo_barangPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmbo_barangPopupMenuWillBecomeInvisible
       
        try{
            

                sql_id = "SELECT * FROM barang where nama_barang='"+cmbo_barang.getSelectedItem()+"'";
            
                rs = stat.executeQuery(sql_id);
                rs.next();
                  String harga = "";
                  String id_br = "";
                  id_br =  rs.getString("id_barang");
                  harga =  rs.getString("harga");
            
                txt_harga.setText(harga);
                txt_id_barang.setText(id_br);
                }
        
        catch(Exception ex){
                   
                }
    }//GEN-LAST:event_cmbo_barangPopupMenuWillBecomeInvisible

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
            Input();
//        
        clear();
        Tampil_Data();     
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void txt_bayarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_bayarKeyPressed
     
        
    }//GEN-LAST:event_txt_bayarKeyPressed

    private void txt_bayarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_bayarKeyReleased
     
    }//GEN-LAST:event_txt_bayarKeyReleased

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       
        Input();
     
        try {
            String path = "src/sipet/Report/Struk_POS.jrxml";

            HashMap hash = new HashMap(1);
            String id_trs = txt_id_trs.getText();
            int c_id_trs = Integer.parseInt(id_trs);
//
//            int x = 10;
            
            hash.put("id_trs",c_id_trs);
           
           
            //  JRBeanCollectionDataSource dataSource = new JRBeanCollectionDataSource(list);
            File file = new File(path);
            JasperDesign jasperDesign = JRXmlLoader.load(file);
            JasperReport report = JasperCompileManager.compileReport(jasperDesign);
            JasperPrint print = JasperFillManager.fillReport(report,hash,con);
            JasperViewer.viewReport(print, false);
        } catch (JRException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Gagal Mencetak Laporan ");
        }          // TODO add your handling code here:
        
         Tampil_Data();     
    }//GEN-LAST:event_jButton6ActionPerformed

    private void txt_id_barangKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_id_barangKeyReleased
      
        
    }//GEN-LAST:event_txt_id_barangKeyReleased

    private void txt_id_barangKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_id_barangKeyPressed
      try{
          
          if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           String a = txt_id_barang.getText();
//           txt_harga.setText(a);
           
           sql_id = "SELECT * FROM barang where id_barang='"+a+"'";
                rs = stat.executeQuery(sql_id);
                rs.next();
                  String harga = "";
                  String id_br = "";
                  String nama_barang = "";
                  nama_barang =  rs.getString("nama_barang");
                  harga =  rs.getString("harga");
                txt_harga.setText(harga);
                cmbo_barang.setSelectedItem(nama_barang);
                }
        
      
           
         }
      
        catch(Exception ex){
                   
                }
    }//GEN-LAST:event_txt_id_barangKeyPressed

    private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed
       clear();
       Tampil_Data();
    }//GEN-LAST:event_btn_resetActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
    
          try{
        txt_id_barang.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        cmbo_barang.setSelectedItem(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        txt_harga.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
        txt_jumlah.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
        
        txt_id_barang.setEnabled(false);
        cmbo_barang.setEnabled(false);
        txt_harga.setEnabled(false);
        btn_tambah.setEnabled(false);
        btn_edit.setEnabled(true);
        btn_hapus.setEnabled(true);
       
        
       }
         catch (Exception e) {

                JOptionPane.showMessageDialog(this, e.getMessage() );
            }
    }//GEN-LAST:event_jTable1MouseClicked

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
            try {
                
                String sql_check = "SELECT * FROM detail_transaksi_pos WHERE id_barang = '"+txt_id_barang.getText()+"'";
            rs = stat.executeQuery(sql_check);
            rs.next();
            String id_barang_check =  rs.getString("id_barang");
            String jml_awal = rs.getString("jumlah");
                    //CHECKING STOK
            String sql_barang_check = "SELECT * FROM barang WHERE id_barang = '"+txt_id_barang.getText()+"'";
            rs = stat.executeQuery(sql_barang_check);
            rs.next();
            String id_barang =  rs.getString("id_barang");
            String stok = rs.getString("stok");

            
            int c_jml_awal = Integer.parseInt(jml_awal);
            int c_jml = Integer.parseInt(txt_jumlah.getText());
            int c_stok = Integer.parseInt(stok);
            
            int sementara = c_jml_awal + c_stok;
            
            int c_jml_akhir = c_jml_awal - c_jml;
            int stok_akhir_sementara = c_stok + c_jml_akhir;
//            int fixed = c_stok - stok_akhir_sementara
//            
            if (sementara < c_jml){
                  JOptionPane.showMessageDialog(null, "Penambahan tidak dapat dilakukan, Stok sisa " +stok+ " Silahkan update data!");
                          
            }
            else{
              
              
                String sql_barang = "SELECT * FROM detail_transaksi_pos where id_barang='"+txt_id_barang.getText()+"' AND id_transaksi_pos ='"+txt_id_trs.getText()+"' ";
                
                rs = stat.executeQuery(sql_barang);
                rs.next();
                String id_barang_2 =  rs.getString("id_barang");
                String id_transaksi_pos = rs.getString("id_transaksi_pos");
              
                
                int parse_harga = Integer.parseInt(txt_harga.getText());
                int parse_jumlah = Integer.parseInt(txt_jumlah.getText());
                int total = parse_jumlah * parse_harga;
                
                //SQQL UPDATE STOK
//                 int stok_update = c_stok - c_jml;
                    
                    String sql_update_Stok = 
                            sql = "update barang SET "
                                + "stok='"+stok_akhir_sementara+"'"
                                +"where id_barang='"+txt_id_barang.getText()+"'";
                
                
            sql = "update detail_transaksi_pos SET "

            + "jumlah='"+txt_jumlah.getText()+"',"
            + "total_harga='"+total+"'"
            +"where id_barang='"+id_barang_2+"' AND id_transaksi_pos='"+id_transaksi_pos+"' ";
            

            stat.executeUpdate(sql);
            stat.executeUpdate(sql_update_Stok);
            JOptionPane.showMessageDialog(null, "Update Berhasil");
            JOptionPane.showMessageDialog(null, "Stok barang Update!");
            

            Tampil_Data();
            clear();

            btn_tambah.setEnabled(true);
            }
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn_editActionPerformed

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
       int confirm = JOptionPane.showConfirmDialog(null, "Apakah anda yakin ingin menghapus data tersebut?", "Konfirmasi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (confirm == 0)  {
            try {
                
                  String sql_check = "SELECT * FROM detail_transaksi_pos WHERE id_barang = '"+txt_id_barang.getText()+"'";
                    rs = stat.executeQuery(sql_check);
                    rs.next();
                    String id_barang_check =  rs.getString("id_barang");
                    String jml_awal = rs.getString("jumlah");
                    
                 //CHECKING STOK
                String sql_barang_check = "SELECT * FROM barang WHERE id_barang = '"+txt_id_barang.getText()+"'";
                rs = stat.executeQuery(sql_barang_check);
                rs.next();
                String id_barang =  rs.getString("id_barang");
                String stok = rs.getString("stok");
                
                int c_jml_awal = Integer.parseInt(jml_awal);
                int c_stok = Integer.parseInt(stok);
                int hasil = c_stok + c_jml_awal;
                
                //SQQL UPDATE STOK
//                 int stok_update = c_stok - c_jml;
                    
                    String sql_update_Stok = 
                            sql = "update barang SET "
                                + "stok='"+hasil+"'"
                                +"where id_barang='"+txt_id_barang.getText()+"'";

                sql = "DELETE FROM detail_transaksi_pos WHERE id_barang='"+txt_id_barang.getText()+"' AND id_transaksi_pos ='"+txt_id_trs.getText()+"'";
                int row = jTable1.getSelectedRow();
                
                stat.executeUpdate(sql_update_Stok);
                if(row  == -1){
                    JOptionPane.showMessageDialog(null, "Data Kosong", "PESAN",  JOptionPane.INFORMATION_MESSAGE);
                }
                else {
                    stat.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus", "Sukses",  JOptionPane.INFORMATION_MESSAGE);
                    JOptionPane.showMessageDialog(null, "Stok barang Update!");
                    

                }
            }
            catch (Exception e) {

                JOptionPane.showMessageDialog(this, e.getMessage() );
            }
            clear();
            Tampil_Data();

        }
    }//GEN-LAST:event_btn_hapusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transaksi_POS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transaksi_POS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transaksi_POS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transaksi_POS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transaksi_POS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_hapus;
    private javax.swing.JButton btn_reset;
    private javax.swing.JButton btn_tambah;
    private javax.swing.JComboBox<String> cmbo_barang;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txt_bayar;
    private javax.swing.JLabel txt_date_time;
    private javax.swing.JTextField txt_harga;
    private javax.swing.JTextField txt_id_barang;
    private javax.swing.JTextField txt_id_trs;
    private javax.swing.JTextField txt_jumlah;
    private javax.swing.JLabel txt_total;
    // End of variables declaration//GEN-END:variables
}
